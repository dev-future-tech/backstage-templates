apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: end-to-end-microservice
  title: End to End Microservice Scaffold
  description: |
    Creates a project and sets it up in a repo and Jenkins
spec:
  owner: backstage/techdocs-core
  type: service
  parameters:
    - title: Enter project details
      required:
        - component_id
        - owner
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
        java_package_name:
          title: Java Package Name
          type: string
          description: Name for the java package. eg (io.backstage.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: 
              - Group
    - title: Enter Jenkins Details
      required:
        - projectName
        - repoUrl
      properties:
        projectName:
          title: Project Name
          type: string
          description: Unique name for project
          ui:autofocus: true
          ui:options:
            rows: 5
        repoUrl:
          title: Repository URL
          type: string
          description: URL to code repository
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: '{{ parameters.component_id }}'
          description: '{{ parameters.description }}'
          artifact_id: '{{ parameters.component_id }}'
          java_package_name: '{{ parameters.java_package_name }}'
          owner: '{{ parameters.owner }}'
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          http_port: 8080

    - id: publish
      name: Publish
      action: publish:bitbucket
      input:
        allowedHosts: ['bitbucket.com']
        description: 'This is {{ parameters.component_id }}'
        repoUrl: '{{ parameters.repoUrl }}'
    - id: fetch-job-template
      name: CreateJobConfig
      action: fetch:template
      input:
        url: ./jenkins
      values:
        jobName: '{{ parameters.projectName }}'
        repoUrl: '{{  parseRepoUrl parameters.repoUrl }}'
        scmId: '{{ generateScmId }}'
        jenkinsFile: '{{ parameters.jenkinsFile }}'
    - id: create-jenkins-job
      name: Get project details
      action: nationalgrid:create-jenkins-job
      input:
        projectName: '{{ parameters.projectName }}'
        repoUrl: '{{ parameters.repoUrl }}'
  output:
    remoteUrl: '{{ steps.fetch-project.output.remoteUrl }}'

